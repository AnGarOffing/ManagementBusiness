// <auto-generated />
using System;
using ManagementBusiness.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementBusiness.Migrations
{
    [DbContext(typeof(ManagementBusinessContext))]
    [Migration("20250827001135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagementBusiness.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasProductos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Productos electrónicos y tecnológicos",
                            Nombre = "Electrónicos"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Vestimenta y accesorios",
                            Nombre = "Ropa"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Artículos para el hogar",
                            Nombre = "Hogar"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Artículos deportivos",
                            Nombre = "Deportes"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Libros y material educativo",
                            Nombre = "Libros"
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RFC")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetalleCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallesCompra");
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("DetallesFactura", t =>
                        {
                            t.HasCheckConstraint("CK_DetalleFactura_ProductoOrServicio", "(ProductoId IS NOT NULL AND ServicioId IS NULL) OR (ProductoId IS NULL AND ServicioId IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetallePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NumeroFactura")
                        .IsUnique();

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Impuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Impuestos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "IVA",
                            Pais = "México",
                            Porcentaje = 16.0m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "IGV",
                            Pais = "Perú",
                            Porcentaje = 18.0m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "GST",
                            Pais = "Australia",
                            Porcentaje = 10.0m
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MetodosPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Pago en efectivo",
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pago con tarjeta de crédito",
                            Nombre = "Tarjeta de Crédito"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Pago con tarjeta de débito",
                            Nombre = "Tarjeta de Débito"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Transferencia bancaria",
                            Nombre = "Transferencia"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Pago con cheque",
                            Nombre = "Cheque"
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.MovimientoInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SucursalId");

                    b.HasIndex("VentaId");

                    b.ToTable("MovimientosInventario");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GastoId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("GastoId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("Pagos", t =>
                        {
                            t.HasCheckConstraint("CK_Pago_SingleReference", "(FacturaId IS NOT NULL AND CompraId IS NULL AND GastoId IS NULL) OR (FacturaId IS NULL AND CompraId IS NOT NULL AND GastoId IS NULL) OR (FacturaId IS NULL AND CompraId IS NULL AND GastoId IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PresupuestoId")
                        .IsUnique()
                        .HasFilter("[PresupuestoId] IS NOT NULL");

                    b.HasIndex("SucursalId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("ImpuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PrecioCosto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StockMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ImpuestoId");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ManagementBusiness.Models.ReporteMensual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVentas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UtilidadNeta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.HasIndex("Mes", "Anio", "SucursalId");

                    b.ToTable("ReportesMensuales");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ImpuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ImpuestoId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EsPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Av. Principal 123, Ciudad",
                            EsPrincipal = true,
                            Nombre = "Sucursal Principal"
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Gastos de alquiler de oficinas o locales",
                            Nombre = "Alquiler"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Gastos de personal y nómina",
                            Nombre = "Sueldos"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Gastos de publicidad y marketing",
                            Nombre = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Luz, agua, gas, internet, etc.",
                            Nombre = "Servicios Públicos"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Gastos de mantenimiento de equipos y locales",
                            Nombre = "Mantenimiento"
                        });
                });

            modelBuilder.Entity("ManagementBusiness.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SucursalId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId")
                        .IsUnique()
                        .HasFilter("[FacturaId] IS NOT NULL");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Compra", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Sucursal", "Sucursal")
                        .WithMany("Compras")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetalleCompra", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Compra", "Compra")
                        .WithMany("Detalles")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Producto", "Producto")
                        .WithMany("DetallesCompra")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetalleFactura", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Factura", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Producto", "Producto")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.Servicio", "Servicio")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Factura");

                    b.Navigation("Producto");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("ManagementBusiness.Models.DetallePedido", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Pedido", "Pedido")
                        .WithMany("Detalles")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Producto", "Producto")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Factura", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Gasto", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Proveedor", "Proveedor")
                        .WithMany("Gastos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.TipoGasto", "TipoGasto")
                        .WithMany("Gastos")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("ManagementBusiness.Models.MovimientoInventario", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Compra", "Compra")
                        .WithMany()
                        .HasForeignKey("CompraId");

                    b.HasOne("ManagementBusiness.Models.Producto", "Producto")
                        .WithMany("MovimientosInventario")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Sucursal", "Sucursal")
                        .WithMany("MovimientosInventario")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Venta", "Venta")
                        .WithMany("MovimientosInventario")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Compra");

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Pago", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Compra", "Compra")
                        .WithMany("Pagos")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.Factura", "Factura")
                        .WithMany("Pagos")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.Gasto", "Gasto")
                        .WithMany("Pagos")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.MetodoPago", "MetodoPago")
                        .WithMany("Pagos")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Factura");

                    b.Navigation("Gasto");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Pedido", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Presupuesto", "Presupuesto")
                        .WithOne("Pedido")
                        .HasForeignKey("ManagementBusiness.Models.Pedido", "PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.Sucursal", "Sucursal")
                        .WithMany("Pedidos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Presupuesto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Presupuesto", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Cliente", "Cliente")
                        .WithMany("Presupuestos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Producto", b =>
                {
                    b.HasOne("ManagementBusiness.Models.CategoriaProducto", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Impuesto", "Impuesto")
                        .WithMany("Productos")
                        .HasForeignKey("ImpuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("ManagementBusiness.Models.ReporteMensual", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Sucursal", "Sucursal")
                        .WithMany("ReportesMensuales")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Servicio", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Impuesto", "Impuesto")
                        .WithMany("Servicios")
                        .HasForeignKey("ImpuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Usuario", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Sucursal", "Sucursal")
                        .WithMany("Usuarios")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Venta", b =>
                {
                    b.HasOne("ManagementBusiness.Models.Factura", "Factura")
                        .WithOne("Venta")
                        .HasForeignKey("ManagementBusiness.Models.Venta", "FacturaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManagementBusiness.Models.MetodoPago", "MetodoPago")
                        .WithMany("Ventas")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementBusiness.Models.Pedido", "Pedido")
                        .WithOne("Venta")
                        .HasForeignKey("ManagementBusiness.Models.Venta", "PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("MetodoPago");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ManagementBusiness.Models.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Pedidos");

                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Compra", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Factura", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Pagos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Gasto", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Impuesto", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManagementBusiness.Models.MetodoPago", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Pedido", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Presupuesto", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Producto", b =>
                {
                    b.Navigation("DetallesCompra");

                    b.Navigation("DetallesFactura");

                    b.Navigation("DetallesPedido");

                    b.Navigation("MovimientosInventario");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Servicio", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Sucursal", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("MovimientosInventario");

                    b.Navigation("Pedidos");

                    b.Navigation("ReportesMensuales");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ManagementBusiness.Models.TipoGasto", b =>
                {
                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("ManagementBusiness.Models.Venta", b =>
                {
                    b.Navigation("MovimientosInventario");
                });
#pragma warning restore 612, 618
        }
    }
}
